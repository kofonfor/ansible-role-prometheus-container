global:
  evaluation_interval: 1m
  scrape_interval: {{ prometheus_scrape_interval }}
  scrape_timeout: 10s

rule_files:
  - /etc/config/rules
  - /etc/config/alerts

scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets:
        - localhost:9090

{% for job in prometheus_jobs %}
  - job_name: {{ job.name }}
    metrics_path: {{ job.metrics_path }}
{% if not job.targets.aws_region is defined %}
    static_configs:
{% if job.targets.ansible_group_name is defined %}
{% for host in groups[job.targets.ansible_group_name] %}
      - targets:
{% if hostvars[host]["prometheus_" + job.name + "_exporter_interface"] is defined %}
        - {{ hostvars[host]["ansible_" + hostvars[host]["prometheus_" + job.name + "_exporter_interface"]]["ipv4"]["address"]}}:{{ job.targets.port }}
{% else %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ job.targets.port }}
{% endif %}
        labels:
          ansible_inventory_hostname: {{ hostvars[host]['inventory_hostname'] }}
{% endfor %}
{% else %}
      - targets:
{% for target in job.targets %}
        - {{ target.host }}:{{ target.port }}
{% endfor %}
{% endif %}
{% else %}
    ec2_sd_configs:
      - region: {{ job.targets.aws_region }}
        access_key: {{ job.targets.aws_access_key }}
        secret_key: {{ job.targets.aws_secret_key }}
        port: {{ job.targets.port }}
{% endif %}
{% if job.relabel_configs is defined %}
    relabel_configs:
{% for config in job.relabel_configs %}
      - source_labels: [{% for label in config.source_labels %}'{{ label }}'{% if not loop.last %},{% endif %}{% endfor %}]
{% if config.regex is defined %}
        regex:         '{{ config.regex }}'
{% endif %}
        target_label:  '{{ config.target_label }}'
{% if config.replacement is defined %}
        replacement:   '{{ config.replacement }}'
{% endif %}
{% if config.action is defined %}
        action:        '{{ config.action }}'
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}

{% if alertmanagers_group_name is defined %}
alerting:
  alertmanagers:
    - static_configs:
      - targets:
{% for host in groups[alertmanagers_group_name] %}
        - {{ hostvars[host]['alertmanager_advertise_address'] }}:{{ alertmanager_cluster_port }}
{% endfor %}
{% endif %}

{% if prometheus_remote_writes is defined %}
remote_write:
{% for remote_write in prometheus_remote_writes %}
  - url: {{ remote_write['url'] }}
    queue_config:
      max_samples_per_send: {{ remote_write['queue_config_max_samples_per_send'] }}
{% endfor %}
{% endif %}
